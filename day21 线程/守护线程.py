import time
from threading import Thread

def son():
	while True:
		print('in son')
		time.sleep(1)


def son2():
	for i in range(3):
		print('in son2 ****')
		time.sleep(1)


if __name__ == '__main__':

	t = Thread(target=son)
	t.daemon = True
	t.start()
	Thread(target=son2).start()




# 主线程会等待子线程结束后才结束
	# 为什么？
	# 主线程结束时，主进程就会结束，所以主线程要等到最后才结束
# 守护线程是守护主线程的，跟守护进程一样，他会控制子线程随着主线程的结束而结束
	# 守护线程会在主线程代码结束后，继续守护其他子线程的执行

# 守护进程会随着主进程的代码结束而结束
	# 如果主线程结束后还有其他子进程，守护进程就不守护了
# 守护线程会随着主线程的结束而结束
	# 如果主线程代码结束后还有其他子线程运行，守护线程依然守护
# 为什么？
	# 守护进程域守护线程的原理不同
	# 守护进程需要主进程来回收资源
	# 守护线程是随着进程的结束而结束
		# 其他子线程结束 ——> 主线程结束 --> 主进程结束 --> 整个线程的所有资源都被回收 --> 守护线程也会被回收

# 进程是资源分配单位
# 子进程都需要他的父进程来回收资源
# 线程是进程中的资源
# 所有的线程都会随着进程的结束而被回收